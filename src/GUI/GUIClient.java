package GUI;

import Middleware.Constants;
import Middleware.EventListener;
import Middleware.Network.Client;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import Client.ClientHandler;
import Client.ClientOperations;
import Middleware.Network; 
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList; 
import javax.swing.*;
import org.gstreamer.Gst;

/**
 *
 * @author Dimitar
 */
public class GUIClient extends javax.swing.JFrame{
 
    ClientHandler client;
    String clientName = null;
    String ServerAddress = null;
    Network.Room[] rooms = null;
    ArrayList<Network.Client> list;
    public JFrame frame1; 
    long ssrc;
    ClientOperations ClientOperations;
    
    /**
     * Creates new form NewJFrame
     * @param newController 
     */
    public GUIClient() { 
        initComponents();
        frame1=this;
        ClientOperations = new ClientOperations(this);
    }

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        CallBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ClientModel1 = new DefaultListModel<>();
        ClientsList1 = new JList<>( ClientModel1 );
        JoinBtn = new javax.swing.JButton();
        RefreshBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        RoomModel = new DefaultListModel<>();
        RoomList = new JList<>( RoomModel );
        jScrollPane5 = new javax.swing.JScrollPane();
        ClientModel2 = new DefaultListModel<>();
        ClientsList2 = new JList<>( ClientModel2 );
        RoomLbl = new javax.swing.JLabel();
        ClientsLbl2 = new javax.swing.JLabel();
        ClientsLbl1= new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CallBtn.setText("Call");
        CallBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CallBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(ClientsList1);

        ClientsLbl1.setText("Clients:");

        JoinBtn.setText("Join Group");
        JoinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JoinBtnActionPerformed(evt);
            }
        });

        RefreshBtn.setText("Refresh");
        RefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientOperations.refreshRooms();
            }
        });

        
        
        jScrollPane5.setViewportView(ClientsList2);

        RoomLbl.setText("Rooms:");

        ClientsLbl2.setText("Clients:");
        
        RoomList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lsRoomMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(RoomList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JoinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RefreshBtn)
                                .addGap(48, 48, 48)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RoomLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClientsLbl2)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CallBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClientsLbl1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CallBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ClientsLbl1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RoomLbl)
                            .addComponent(ClientsLbl2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(RefreshBtn)
                        .addGap(35, 35, 35)
                        .addComponent(JoinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>                        
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton CallBtn;
    private javax.swing.JLabel ClientsLbl1;
    private javax.swing.JLabel ClientsLbl2;
    public DefaultListModel<String> ClientModel1;
    public DefaultListModel<String> ClientModel2;
    private javax.swing.JList ClientsList1;
    private javax.swing.JList ClientsList2;
    private javax.swing.JButton JoinBtn;
    private javax.swing.JButton RefreshBtn;
    private javax.swing.JLabel RoomLbl;
    public DefaultListModel<String> RoomModel;
    private javax.swing.JList RoomList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration     
    
    public void setGuiTitle(String title){
    	System.out.println(title);
    	frame1.setTitle(title);
    }
    
    public void setSelectedRoom(int i){
    	RoomList.setSelectedIndex(i);
    }
    
    public String getSelectedClient(){
    	return ClientsList1.getSelectedValue().toString();
    }
     

	public void addNewClients(int counter, String name) {
		if(!ClientModel1.contains(name))
		{
			ClientModel1.add(counter, name);
		}
	}
	
	public void addNewRooms(int counter, String name) {
		RoomModel.add(counter, name);
	}
	
	public void addRoomClient(int counter, String name) {
		ClientModel2.add(counter, name);
	}
	
	private void CallBtnActionPerformed(ActionEvent evt) {
		if (ClientsList1.isSelectionEmpty()) {
            String infoMessage = "Please Select User";
            String titleBar = "Select User";
            JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
        } else {
        	ClientOperations.makeCall();
        }
	}
	
	private void JoinBtnActionPerformed(ActionEvent evt) {
		if (RoomList.isSelectionEmpty()){
			String infoMessage = "Please Select Room";
            String titleBar = "Select Room";
            JOptionPane.showMessageDialog(null, infoMessage, "InfoBox: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
		}
		else{
			int i = RoomList.getSelectedIndex();
			ClientOperations.setLastSelectedIndex(i);
            ClientOperations.sendJoinRoom(i);
            System.out.println(i + "DEBUG");
		}
	}
	
	private void lsRoomMouseClicked(MouseEvent evt) {
		int index = RoomList.getSelectedIndex();
		System.out.println("Room" + index + "is clicked. DEBUG");
		ClientOperations.updateRoomClient(index);
	}

	public void clearClientList() {
		ClientModel1.clear();
		
	}

	public void clearRooms() {
		RoomModel.clear();
		
	}

	public void clearMulticastClientList() {
		ClientModel2.clear();
	}
	
//	public void addClientsToSelectedRoom(int index, String name){
//		System.out.println("Client with name:" + name +" added to the Clientlist2");
//		ClientModel2.add(index, name);
//	}
    
}
